[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS626-GAA",
    "section": "",
    "text": "Welcome to Brigitta Karen Tsai’s webpage. In this webpage, you will find the documentation of my learning journey for Geospatial Analytics and Application course!"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "In this analysis, we are interested to discover:\n\nIf the key indicators of tourism economy of Thailand are independent from space and time\n\n\n\n\n\n\n\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, GGally, GWmodel,\n               ggstatsplot, Kendall, plotly, sfdep)\n\n\n\n\n\nAspatial DataGeospatial Data\n\n\n\ntourism &lt;- read_csv(\"data/aspatial/thailand_domestic_tourism_2019_2023_ver2.csv\") %&gt;% \n  mutate(year = year(date))\n\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nboundary &lt;- st_read(dsn = \"data/geospatial\",\n                        layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;% \n  st_transform(crs = 32647)\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\brigittatsai\\ISSS626_AY2024-25_T1\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\n\n\n\n\nboundary &lt;- boundary %&gt;%\n  rename(province_eng = ADM1_EN)\n\n\nboundary &lt;- boundary[, !(names(boundary) %in% c(\"ADM3_REF\", \"ADM3ALT1EN\", \"ADM3ALT2EN\", \"ADM3ALT1TH\", \"ADM3ALT2TH\", \"ADM3_TH\",\"ADM2_TH\", \"ADM1_TH\", \"ADM0_TH\", \"ADM0_EN\", \"ADM0_PCODE\", \"ADM3_PCODE\", \"ADM2_PCODE\", \"validOn\", \"validTo\", \"ADM1_PCODE\", \"date\", \"ADM1_REF\", \"ADM1ALT1EN\", \"ADM1ALT2EN\", \"ADM1ALT1TH\", \"ADM1ALT2TH\"))]\n\n\nboundary[is.na(boundary$Shape_Leng), ]\n\nSimple feature collection with 0 features and 3 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n[1] Shape_Leng   Shape_Area   province_eng geometry    \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\n\n\n\ntourism &lt;- tourism[, !(names(tourism) %in% c(\"province_thai\", \"region_thai\"))]\n\n\nunique(tourism$variable)\n\n[1] \"ratio_tourist_stay\" \"no_tourist_stay\"    \"no_tourist_all\"    \n[4] \"no_tourist_thai\"    \"no_tourist_foreign\" \"revenue_all\"       \n[7] \"revenue_thai\"       \"revenue_foreign\"   \n\n\n\noptions(scipen = 999) # to display full number when summing up the value column\n\nRevenue generated by tourism industry\n\nrevenue_all &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"revenue_all\"))\n\n\nrevenue_all &lt;- revenue_all %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nrevenue_all &lt;- revenue_all %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nRevenue generated by Thai tourists\n\nrevenue_thai &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"revenue_thai\"))\n\n\nrevenue_thai &lt;- revenue_thai %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nrevenue_thai &lt;- revenue_thai %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nRevenue generated by foreign tourists\n\nrevenue_foreign &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"revenue_foreign\"))\n\n\nrevenue_foreign &lt;- revenue_foreign %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nrevenue_foreign &lt;- revenue_foreign %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of tourists who stay overnight\n\ntourist_stay &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_stay\"))\n\n\ntourist_stay &lt;- tourist_stay %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_stay &lt;- tourist_stay %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of domestic tourists who visited the province\n\ntourist_all &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_all\"))\n\n\ntourist_all &lt;- tourist_all %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_all &lt;- tourist_all %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of Thai tourists who visited the province\n\ntourist_thai &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_thai\"))\n\n\ntourist_thai &lt;- tourist_thai %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_thai &lt;- tourist_thai %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of foreign tourists who visited the province\n\ntourist_foreign &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_foreign\"))\n\n\ntourist_foreign &lt;- tourist_foreign %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_foreign &lt;- tourist_foreign %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nRatio of tourist stay overnight\nRatio = Total rooms booked/ total available rooms\n\nratio_tourist &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"ratio_tourist_stay\"))\n\nFor this column, we will use median to aggregate the values as it is not appropriate to sum ratio values\n\nratio_tourist &lt;- ratio_tourist %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = median(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nratio_tourist &lt;- ratio_tourist %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\n\n\n\n\n\nAs seen in previous section, the tourism dataset is divided into each variables to sum the values. Let’s first join the tourism dataset into 1 again.\n\ntourism_data &lt;- revenue_all %&gt;%\n  left_join(revenue_thai, by = \"province_eng\") %&gt;%\n  left_join(revenue_foreign, by = \"province_eng\") %&gt;%\n  left_join(tourist_stay, by = \"province_eng\") %&gt;% \n  left_join(tourist_all, by = \"province_eng\") %&gt;% \n  left_join(tourist_thai, by = \"province_eng\") %&gt;% \n  left_join(tourist_foreign, by = \"province_eng\") %&gt;% \n  left_join(ratio_tourist, by = \"province_eng\")\n\n\n\n\nNow, let us join both boundary and tourism data\n\nthai_tourism &lt;- left_join(boundary, tourism_data, by = c(\"province_eng\"))\n\nLet us check if there is unmatched rows to ensure data is accurate\n\nunmatched &lt;- thai_tourism %&gt;% \n  filter(is.na(Shape_Leng))\n\nprint(unmatched)\n\nSimple feature collection with 0 features and 11 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n [1] Shape_Leng         Shape_Area         province_eng       revenue_all       \n [5] revenue_thai       revenue_foreign    no_tourist_stay    no_tourist_all    \n [9] no_tourist_thai    no_tourist_foreign ratio_tourist_stay geometry          \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nThere are multiple missing values after joining the table. This is due to different spacings of province name. Let us check using the code below\n\ncheck_value &lt;- tourism %&gt;%\n  filter(province_eng %in% c(\"Buriram\", \"Chainat\", \"Chonburi\", \"Lopburi\", \"Nong Bua Lamphu\", \"Phang Nga\", \"Prachinburi\", \"Sisaket\"))\n\nprint(check_value)\n\n# A tibble: 3,200 × 6\n   date       province_eng    region_eng     variable           value  year\n   &lt;date&gt;     &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;\n 1 2019-01-01 Lopburi         central        ratio_tourist_stay  61.3  2019\n 2 2019-01-01 Chainat         central        ratio_tourist_stay  79.3  2019\n 3 2019-01-01 Chonburi        east           ratio_tourist_stay  84.3  2019\n 4 2019-01-01 Prachinburi     east           ratio_tourist_stay  68.6  2019\n 5 2019-01-01 Phang Nga       south          ratio_tourist_stay  86.5  2019\n 6 2019-01-01 Buriram         east_northeast ratio_tourist_stay  71.3  2019\n 7 2019-01-01 Sisaket         south          ratio_tourist_stay  68.6  2019\n 8 2019-01-01 Nong Bua Lamphu east_northeast ratio_tourist_stay  65.0  2019\n 9 2020-01-01 Lopburi         central        ratio_tourist_stay  51.5  2020\n10 2020-01-01 Chainat         central        ratio_tourist_stay  73.5  2020\n# ℹ 3,190 more rows\n\n\n\ncheck_value2 &lt;- boundary %&gt;%\n  filter(province_eng %in% c(\"Buri Ram\", \"Chai Nat\", \"Chon Buri\", \"Lop Buri\", \"Nong Bua Lam Phu\", \"Phangnga\", \"Prachin Buri\", \"Si Sa Ket\"))\n\nprint(check_value2)\n\nSimple feature collection with 8 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 349324.1 ymin: 856050.4 xmax: 1137931 ymax: 1959175\nProjected CRS: WGS 84 / UTM zone 47N\n  Shape_Leng Shape_Area     province_eng                       geometry\n1   5.693342  0.5457884         Lop Buri MULTIPOLYGON (((751293.3 17...\n2   2.896316  0.2090783         Chai Nat MULTIPOLYGON (((620165.4 17...\n3   6.091786  0.3756301        Chon Buri MULTIPOLYGON (((714273.8 13...\n4   4.705205  0.4223316     Prachin Buri MULTIPOLYGON (((768228.7 15...\n5   8.701860  0.8445370         Buri Ram MULTIPOLYGON (((921217 1750...\n6   6.354893  0.7461402        Si Sa Ket MULTIPOLYGON (((1047999 172...\n7   4.478819  0.3451953 Nong Bua Lam Phu MULTIPOLYGON (((848689.2 19...\n8   9.158469  0.3364923         Phangnga MULTIPOLYGON (((457515.4 85...\n\n\nNotice that the writings are inconsistent. Let us standardize it by changing the name in the boundary data\n\nboundary &lt;- boundary %&gt;%\n  mutate(province_eng = recode(province_eng,\n                          \"Buri Ram\" = \"Buriram\",\n                          \"Chai Nat\" = \"Chainat\",\n                          \"Chon Buri\" = \"Chonburi\",\n                          \"Nong Bua Lam Phu\" = \"Nong Bua Lamphu\",\n                          \"Phangnga\" = \"Phang Nga\",\n                          \"Prachin Buri\" = \"Prachinburi\",\n                          \"Si Sa Ket\" = \"Sisaket\",\n                          \"Lop Buri\" = \"Lopburi\"))\n\nLet us join the table again\n\nthai_tourism &lt;- left_join(boundary, tourism_data, by = c(\"province_eng\"))\n\nLet us do final check if there is any missing value\n\nmissing &lt;- thai_tourism %&gt;% \n  filter(is.na(Shape_Leng))\n\nprint(missing)\n\nSimple feature collection with 0 features and 11 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n [1] Shape_Leng         Shape_Area         province_eng       revenue_all       \n [5] revenue_thai       revenue_foreign    no_tourist_stay    no_tourist_all    \n [9] no_tourist_thai    no_tourist_foreign ratio_tourist_stay geometry          \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nThere is no missing value in the final dataset. The dataset is ready to be used for analysis\n\n\n\n\nLet us create a time series cube based on the revenue generated from tourism in Thailand\n\ntourism_revenue &lt;- tourism %&gt;%\n  filter(variable %in% c(\"revenue_all\"))\n\nDerive a dataframe grouped by the year and province in Thailand\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  group_by(year, province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\n\ntourism_st &lt;- spacetime(tourism_revenue, boundary,\n                      .loc_col = \"province_eng\",\n                      .time_col = \"year\")\n\n\nis_spacetime_cube(tourism_st)\n\n[1] TRUE\n\n\n\n\n\n\n\n\n\nclass(thai_tourism)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\nbasemap &lt;- tm_shape(thai_tourism) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size=0.5)\n\ngdppc &lt;- qtm(thai_tourism, \"revenue_all\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\nSome legend labels were too wide. These labels have been resized to 0.64, 0.64. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\n\n\n\nbasemap &lt;- tm_shape(thai_tourism) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size=0.5)\n\ngdppc &lt;- qtm(thai_tourism, \"no_tourist_thai\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\nbasemap &lt;- tm_shape(thai_tourism) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size=0.5)\n\ngdppc &lt;- qtm(thai_tourism, \"no_tourist_foreign\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\nFindings:\nFrom the choropleth map, we can roughly see that most foreign tourist visits Bangkok area and Chonburi area, which makes the revenue from tourist are heavy on the Bangkok area, while thailand tourists are more spread out across the region.\n\n\n\n\nthai_tourism_sp &lt;- thai_tourism %&gt;% \n  as_Spatial()\n\n\n\n\n\n\n\nCross-ValidationAIC\n\n\n\nbw_CV &lt;- bw.gwr(revenue_all ~ 1, \n             data = thai_tourism_sp,\n             approach = \"CV\",\n             adaptive = TRUE, \n             kernel = \"bisquare\", \n             longlat = T)\n\nAdaptive bandwidth: 55 CV score: 4428033682012956772066406 \nAdaptive bandwidth: 42 CV score: 4500834259376365885224440 \nAdaptive bandwidth: 64 CV score: 4381413976764054394448466 \nAdaptive bandwidth: 68 CV score: 4361239963255682344428408 \nAdaptive bandwidth: 72 CV score: 4345180954006887388486882 \nAdaptive bandwidth: 73 CV score: 4341733369505226221800826 \nAdaptive bandwidth: 75 CV score: 4335011644352382000840428 \nAdaptive bandwidth: 75 CV score: 4335011644352382000840428 \n\n\n\nbw_CV\n\n[1] 75\n\n\n\n\n\nbw_AIC &lt;- bw.gwr(revenue_all ~ 1, \n             data = thai_tourism_sp,\n             approach =\"AIC\",\n             adaptive = TRUE, \n             kernel = \"bisquare\", \n             longlat = T)\n\nAdaptive bandwidth (number of nearest neighbours): 55 AICc value: 4257.211 \nAdaptive bandwidth (number of nearest neighbours): 42 AICc value: 4258.925 \nAdaptive bandwidth (number of nearest neighbours): 64 AICc value: 4256.018 \nAdaptive bandwidth (number of nearest neighbours): 68 AICc value: 4255.513 \nAdaptive bandwidth (number of nearest neighbours): 72 AICc value: 4255.01 \nAdaptive bandwidth (number of nearest neighbours): 73 AICc value: 4254.876 \nAdaptive bandwidth (number of nearest neighbours): 75 AICc value: 4254.645 \nAdaptive bandwidth (number of nearest neighbours): 75 AICc value: 4254.645 \n\n\n\nbw_AIC\n\n[1] 75\n\n\n\n\n\n\n\n\n\ngwstat &lt;- gwss(data = thai_tourism_sp,\n               vars = \"revenue_all\",\n               bw = bw_AIC,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\n\n\ngwstat\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n\n   ***********************Calibration information*************************\n\n   Local summary statistics calculated for variables:\n    revenue_all\n   Number of summary points: 77\n   Kernel function: bisquare \n   Summary points: the same locations as observations are used.\n   Adaptive bandwidth: 75 (number of nearest neighbours)\n   Distance metric: Great Circle distance metric is used.\n\n   ************************Local Summary Statistics:**********************\n   Summary information for Local means:\nrevenue_all_LM \n       Min.     1st Qu.      Median     3rd Qu.        Max. \n38547533805 50753907508 69229936334 81792139502 93215970572 \n   Summary information for local standard deviation :\nrevenue_all_LSD \n        Min.      1st Qu.       Median      3rd Qu.         Max. \n108209116300 161382206285 232157919632 282418062711 304777922969 \n   Summary information for local variance :\nrevenue_all_LVar \n                   Min.                 1st Qu.                  Median \n11709212850467257713840 26044216505375674860220 53897299647833038652842 \n                3rd Qu.                    Max. \n79759962145408084344682 92889582329423068146404 \n   Summary information for Local skewness:\nrevenue_all_LSKe \n    Min.  1st Qu.   Median  3rd Qu.     Max. \n4.949413 5.332615 5.651104 6.384997 8.984196 \n   Summary information for localized coefficient of variation:\nrevenue_all_LCV \n    Min.  1st Qu.   Median  3rd Qu.     Max. \n2.793948 3.082332 3.338459 3.501539 3.793002 \n\n   ************************************************************************\n\n\n\n\n\n\ngwstat_tourism &lt;- as.data.frame(gwstat$SDF)\n\n\nthai_gstat &lt;- cbind(thai_tourism, gwstat_tourism)\n\n\n\n\n\ntm_shape(thai_gstat) +\n  tm_fill(\"revenue_all_LM\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Revenue Distribution\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size = 0.5,\n            legend.height = 1.50, \n            legend.width = 1.50,\n            frame = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngwstat &lt;- gwss(data = thai_tourism_sp,\n               vars = \"revenue_all\",\n               bw = bw_AIC,\n               kernel = \"bisquare\",\n               adaptive = FALSE,\n               longlat = T)\n\n\n\n\n\ngwstat_tourism &lt;- as.data.frame(gwstat$SDF)\n\n\nthai_gstat &lt;- cbind(thai_tourism, gwstat_tourism)\n\n\n\n\n\ntm_shape(thai_gstat) +\n  tm_fill(\"revenue_all_LM\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Revenue Distribution\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size = 0.5,\n            legend.height = 1.50, \n            legend.width = 1.50,\n            frame = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwm_q &lt;- poly2nb(thai_tourism, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n\n\n\n\n\n\nmoran.test(thai_tourism$revenue_all, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$revenue_all  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = -0.38565, p-value = 0.6501\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.032059694      -0.013333333       0.002357817 \n\n\n\nmoran.test(thai_tourism$revenue_foreign, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$revenue_foreign  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = -0.14552, p-value = 0.5578\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.021359589      -0.013333333       0.003042335 \n\n\n\nmoran.test(thai_tourism$revenue_thai, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$revenue_thai  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = -0.59004, p-value = 0.7224\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.037892905      -0.013333333       0.001732513 \n\n\n\nmoran.test(thai_tourism$no_tourist_all, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$no_tourist_all  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 0.24853, p-value = 0.4019\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.001276884      -0.013333333       0.002353354 \n\n\n\n\n\n\n\n\n\n\n\nwm_q &lt;- poly2nb(thai_tourism, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n\n\n\n\n\n\nComputing Local Moran’s ILocal Moran’s I Valuesp-values\n\n\n\nfips &lt;- order(thai_tourism$province_eng)\nlocalMI &lt;- localmoran(thai_tourism$revenue_all, rswm_q)\nhead(localMI)\n\n           Ii          E.Ii      Var.Ii       Z.Ii  Pr(z != E(Ii))\n1 -1.83799860 -0.7673501158 2.138319789 -0.7321677 0.4640662019682\n2 -0.84568638 -0.0006847924 0.025995168 -5.2409644 0.0000001597396\n3 -0.42360090 -0.0007593821 0.014022725 -3.5707662 0.0003559385446\n4 -0.28298520 -0.0008584885 0.010273957 -2.7833981 0.0053792760572\n5  0.02378074 -0.0001327355 0.001343105  0.6525108 0.5140716849302\n6  0.05716301 -0.0010121113 0.018684887  0.4255906 0.6704061909293\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=thai_tourism$province_eng[fips]),\n  check.names=FALSE)\n\n                                     Ii           E.Ii         Var.Ii\nAmnat Charoen             0.07083095475 -0.00105904034  0.02642916197\nAng Thong                 0.05716300575 -0.00101211133  0.01868488708\nBangkok                  -1.83799860222 -0.76735011581  2.13831978877\nBueng Kan                 0.06881951236 -0.00099856395  0.02492143607\nBuriram                   0.04116994539 -0.00065817138  0.00958894589\nChachoengsao             -0.22456652797 -0.00065230008  0.00568869225\nChainat                   0.06867867168 -0.00098407156  0.01816774650\nChaiyaphum                0.03835985563 -0.00092325362  0.01704597461\nChanthaburi              -0.04814604279 -0.00050560248  0.00736728315\nChiang Mai               -0.13450098001 -0.00900973280  0.13016646377\nChiang Rai                0.01339027016 -0.00019489395  0.00486793509\nChonburi                 -0.25218265411 -0.04201669166  1.00556665353\nChumphon                 -0.02346538797 -0.00066103325  0.01650316319\nKalasin                   0.06188701939 -0.00100372369  0.01201031217\nKamphaeng Phet            0.06208705355 -0.00095083753  0.01384876288\nKanchanaburi             -0.01074825111 -0.00002760711  0.00040246374\nKhon Kaen                 0.02447102795 -0.00016316642  0.00124687144\nKrabi                     0.00647413741 -0.00235563243  0.04342954175\nLampang                   0.01006584072 -0.00070044464  0.00708353470\nLamphun                  -0.03456619366 -0.00094275090  0.02352980870\nLoei                      0.04652147598 -0.00073364096  0.00878094156\nLopburi                   0.04536393836 -0.00066944698  0.00583812969\nMae Hong Son             -0.07005053891 -0.00067593902  0.02565931441\nMaha Sarakham             0.06312827899 -0.00100611120  0.01465300243\nMukdahan                  0.06848945114 -0.00083509460  0.00999422441\nNakhon Nayok              0.04199015929 -0.00061097167  0.00890171030\nNakhon Pathom            -0.21489161570 -0.00068217102  0.00689886133\nNakhon Phanom             0.06804738203 -0.00088800034  0.02216452217\nNakhon Ratchasima         0.01076889014 -0.00003334270  0.00029096091\nNakhon Sawan              0.05851084146 -0.00072892287  0.00635643021\nNakhon Si Thammarat      -0.01515857173 -0.00026910394  0.00392212091\nNan                       0.06577903280 -0.00081505703  0.02034533972\nNarathiwat                0.07090949568 -0.00093157452  0.03535444476\nNong Bua Lamphu           0.04940749978 -0.00106478228  0.02657230378\nNong Khai                 0.05455144398 -0.00070366504  0.01299457961\nNonthaburi               -0.42360089900 -0.00075938213  0.01402272512\nPathum Thani             -0.28298519751 -0.00085848855  0.01027395737\nPattani                   0.03033040601 -0.00101893481  0.02542931850\nPhang Nga                 0.00535962987 -0.00001131013  0.00028254911\nPhatthalung               0.02253659477 -0.00090214141  0.01665653314\nPhayao                    0.04127232904 -0.00093588252  0.01727892278\nPhetchabun                0.04206480973 -0.00048503171  0.00490614010\nPhetchaburi              -0.00701853785 -0.00006659779  0.00166364987\nPhichit                   0.05997445991 -0.00096541858  0.01782371136\nPhitsanulok               0.04681828255 -0.00047233482  0.00565484930\nPhra Nakhon Si Ayutthaya  0.02378073991 -0.00013273550  0.00134310492\nPhrae                     0.06585844780 -0.00089707848  0.01306647591\nPhuket                    0.00000000000  0.00000000000  0.00000000000\nPrachinburi               0.04194069463 -0.00072835530  0.01345020233\nPrachuap Khiri Khan      -0.01444030941 -0.00046885706  0.01780196628\nRanong                   -0.01580883037 -0.00085754128  0.02140491550\nRatchaburi                0.03039770577 -0.00078959962  0.01150222035\nRayong                   -0.00373054925 -0.00000028939  0.00001099288\nRoi Et                    0.07316891133 -0.00097817034  0.01170484641\nSa Kaeo                   0.04167731057 -0.00066355668  0.00966735249\nSakon Nakhon              0.06323140237 -0.00087858230  0.01051421782\nSamut Prakan             -0.84568638003 -0.00068479243  0.02599516847\nSamut Sakhon             -0.46727833706 -0.00095876757  0.01770103720\nSamut Songkhram           0.03546514819 -0.00075636501  0.01888138672\nSaraburi                  0.03568908684 -0.00058367125  0.00850418209\nSatun                     0.01727953128 -0.00047189614  0.01178345101\nSing Buri                 0.06849618922 -0.00101639120  0.01480256807\nSisaket                   0.06869155659 -0.00094121430  0.01737726911\nSongkhla                 -0.04369438435 -0.00049426294  0.00720213315\nSukhothai                 0.05929615194 -0.00082070118  0.00982210874\nSuphan Buri               0.04352690070 -0.00063973702  0.00646999691\nSurat Thani              -0.01294059772 -0.00190596312  0.02773344116\nSurin                     0.06699652147 -0.00087318251  0.01612232273\nTak                       0.02038725673 -0.00057672306  0.00440533087\nTrang                     0.00879964494 -0.00055674285  0.01028287975\nTrat                      0.02097512255 -0.00015065121  0.01159839596\nUbon Ratchathani          0.06005136322 -0.00061752391  0.01541759291\nUdon Thani                0.04043400005 -0.00039635734  0.00474559843\nUthai Thani               0.04834655198 -0.00096439423  0.01404602297\nUttaradit                 0.06290286784 -0.00092453752  0.01706965728\nYala                      0.02976267619 -0.00085365356  0.02130795790\nYasothon                  0.07248548039 -0.00103478400  0.01507016045\n                                   Z.Ii Pr.z....E.Ii..\nAmnat Charoen             0.44220816550         0.6583\nAng Thong                 0.42559060009         0.6704\nBangkok                  -0.73216772361         0.4641\nBueng Kan                 0.44226375235         0.6583\nBuriram                   0.42715242646         0.6693\nChachoengsao             -2.96876260231         0.0030\nChainat                   0.51683276920         0.6053\nChaiyaphum                0.30088111946         0.7635\nChanthaburi              -0.55503719283         0.5789\nChiang Mai               -0.34782747363         0.7280\nChiang Rai                0.19471190228         0.8456\nChonburi                 -0.20958343283         0.8340\nChumphon                 -0.17751464598         0.8591\nKalasin                   0.57386478914         0.5661\nKamphaeng Phet            0.53566859548         0.5922\nKanchanaburi             -0.53438898432         0.5931\nKhon Kaen                 0.69763381711         0.4854\nKrabi                     0.04236983376         0.9662\nLampang                   0.12792071369         0.8982\nLamphun                  -0.21919618006         0.8265\nLoei                      0.50428761107         0.6141\nLopburi                   0.60247085905         0.5469\nMae Hong Son             -0.43308981172         0.6649\nMaha Sarakham             0.52981915887         0.5962\nMukdahan                  0.69344573929         0.4880\nNakhon Nayok              0.45152770242         0.6516\nNakhon Pathom            -2.57899148032         0.0099\nNakhon Phanom             0.46303412841         0.6433\nNakhon Ratchasima         0.63328064352         0.5266\nNakhon Sawan              0.74303056745         0.4575\nNakhon Si Thammarat      -0.23774899263         0.8121\nNan                       0.46687779020         0.6406\nNarathiwat                0.38207690115         0.7024\nNong Bua Lamphu           0.30962665227         0.7568\nNong Khai                 0.48472042815         0.6279\nNonthaburi               -3.57076617157         0.0004\nPathum Thani             -2.78339807865         0.0054\nPattani                   0.19658983250         0.8441\nPhang Nga                 0.31952388681         0.7493\nPhatthalung               0.18161088889         0.8559\nPhayao                    0.32109875280         0.7481\nPhetchabun                0.60747438907         0.5435\nPhetchaburi              -0.17044138455         0.8647\nPhichit                   0.45645977698         0.6481\nPhitsanulok               0.62887519637         0.5294\nPhra Nakhon Si Ayutthaya  0.65251083582         0.5141\nPhrae                     0.58399346585         0.5592\nPhuket                              NaN            NaN\nPrachinburi               0.36791590620         0.7129\nPrachuap Khiri Khan      -0.10471467926         0.9166\nRanong                   -0.10219317212         0.9186\nRatchaburi                0.29079505125         0.7712\nRayong                   -1.12507965880         0.2606\nRoi Et                    0.68534808378         0.4931\nSa Kaeo                   0.43063167601         0.6667\nSakon Nakhon              0.62522622775         0.5318\nSamut Prakan             -5.24096436405         0.0000\nSamut Sakhon             -3.50496983019         0.0005\nSamut Songkhram           0.26360257354         0.7921\nSaraburi                  0.39333654998         0.6941\nSatun                     0.16352984708         0.8701\nSing Buri                 0.57134032448         0.5678\nSisaket                   0.52822981910         0.5973\nSongkhla                 -0.50904291159         0.6107\nSukhothai                 0.60658807756         0.5441\nSuphan Buri               0.54908844219         0.5829\nSurat Thani              -0.06626070868         0.9472\nSurin                     0.53451777233         0.5930\nTak                       0.31585260712         0.7521\nTrang                     0.09226794222         0.9265\nTrat                      0.19616144815         0.8445\nUbon Ratchathani          0.48860481380         0.6251\nUdon Thani                0.59270376863         0.5534\nUthai Thani               0.41607023571         0.6774\nUttaradit                 0.48853399479         0.6252\nYala                      0.20974045792         0.8339\nYasothon                  0.59889146247         0.5492\n\n\n\nthai_tourism.localMI &lt;- cbind(thai_tourism,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n\ntm_shape(thai_tourism.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(thai_tourism.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\nSome legend labels were too wide. These labels have been resized to 0.61. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnci &lt;- moran.plot(thai_tourism$revenue_all, rswm_q,\n                  labels=as.character(thai_tourism$province_eng), \n                  xlab=\"Revenue from Tourist\", \n                  ylab=\"Spatially Lag Revenue from Tourist\")\n\n\n\n\n\n\n\n\nAs seen from the scatter plot, it can be seen that Chonburi, Phuket and Bangkok is way further from the cluster\n\n\n\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nthai_tourism$lag_revenue &lt;- lag.listw(rswm_q, thai_tourism$revenue_all)\nDV &lt;- thai_tourism$lag_revenue - mean(thai_tourism$lag_revenue)     \n\nCentering local Moran around the mean value\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nSet a statistical significance level\n\nsignif &lt;- 0.05\n\n\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 1 # low low\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2 # high low\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3 # low high\nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4 # high high\n\nThe non significant value of Moran will be placed in category 0\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n\n\nthai_tourism.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(thai_tourism.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\nFrom the LISA Map, we can see that all the provinces surrounding Bangkok is a low-high autocorrelation, which means that all the surrounding provinces are low outlier, whereas Bangkok is a high outlier in terms of revenue from all tourists.\n\n\n\n\n\n\n\n\nwm_idw &lt;- thai_tourism %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wts = st_inverse_distance(nb, \n                              geometry, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    revenue_all, nb, wts, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 77 features and 24 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 77 × 25\n   gi_star cluster     e_gi   var_gi std_dev p_value p_sim p_folded_sim skewness\n     &lt;dbl&gt; &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1  -0.533 High     1.25e-6 1.69e-12  -0.703 4.82e-1  0.28         0.14     1.82\n 2   7.45  Low      1.22e-6 1.14e-11   5.28  1.31e-7  0.08         0.04     4.64\n 3   3.49  Low      1.57e-6 8.33e-12   3.04  2.40e-3  0.12         0.06     2.91\n 4   3.05  Low      1.38e-6 6.11e-12   3.11  1.85e-3  0.1          0.05     3.91\n 5  -0.627 Low      1.25e-6 2.07e-12  -0.668 5.04e-1  0.3          0.15     2.32\n 6  -0.387 Low      1.25e-6 4.45e-12  -0.407 6.84e-1  0.98         0.49     3.04\n 7  -0.594 Low      1.03e-6 1.74e-12  -0.538 5.91e-1  0.6          0.3      2.83\n 8  -0.549 Low      1.46e-6 5.35e-12  -0.563 5.73e-1  0.14         0.07     2.59\n 9  -0.509 Low      1.16e-6 3.63e-12  -0.549 5.83e-1  0.16         0.08     3.05\n10  -0.395 Low      7.75e-7 1.38e-12  -0.337 7.36e-1  1            0.5      3.10\n# ℹ 67 more rows\n# ℹ 16 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, Shape_Leng &lt;dbl&gt;,\n#   Shape_Area &lt;dbl&gt;, province_eng &lt;chr&gt;, revenue_all &lt;dbl&gt;,\n#   revenue_thai &lt;dbl&gt;, revenue_foreign &lt;dbl&gt;, no_tourist_stay &lt;dbl&gt;,\n#   no_tourist_all &lt;dbl&gt;, no_tourist_thai &lt;dbl&gt;, no_tourist_foreign &lt;dbl&gt;,\n#   ratio_tourist_stay &lt;dbl&gt;, geometry &lt;MULTIPOLYGON [m]&gt;, lag_revenue &lt;dbl&gt;\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\nFindings: There is no hotspot area in the plot above and there are coldspots identified in Ubon-Ratchathani, Yasothon, Roi Et and Mukdahan provinces.\n\n\n\n\n\ncluster_vars.cor = cor(tourism_data[,2:9])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\nFrom the correlation analysis, there is an interesting finding. Overall revenue are strongly correlated with number of foreign tourist, but it’s less stronger with the number of thai tourists. This may be due to foreign tourists contributing more revenue and spending more money as compared to local tourists.\n\n\n\n\n\nLet us create a time series cube based on the revenue generated from tourism in Thailand\n\ntourism_revenue &lt;- tourism %&gt;%\n  filter(variable %in% c(\"revenue_all\"))\n\n\ntourism_revenue &lt;- left_join(boundary, tourism_revenue, by = c(\"province_eng\"))\n\nDerive a dataframe grouped by the year and province in Thailand\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  group_by(year, province_eng, geometry) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n`summarise()` has grouped output by 'year', 'province_eng'. You can override\nusing the `.groups` argument.\n\n\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\n\ntourism_st &lt;- spacetime(tourism_revenue, boundary,\n                      .loc_col = \"province_eng\",\n                      .time_col = \"year\")\n\n\nis_spacetime_cube(tourism_st)\n\n[1] TRUE\n\n\n\n\n\n\n\n\ntourism_nb &lt;- tourism_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb, \n                             geometry, \n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n! Polygon provided. Using point on surface.\n\n\n\n\n\n\ngi_stars &lt;- tourism_nb %&gt;% \n  group_by(year) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    revenue_all, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\ngi_stars\n\nSimple feature collection with 385 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 385 × 16\n# Groups:   year [5]\n    year province_eng                   geometry revenue_all nb    wt    gi_star\n   &lt;dbl&gt; &lt;chr&gt;                &lt;MULTIPOLYGON [m]&gt;       &lt;dbl&gt; &lt;lis&gt; &lt;lis&gt;   &lt;dbl&gt;\n 1  2019 Bangkok       (((674339.8 1543300, 674…     1.07e12 &lt;int&gt; &lt;dbl&gt;   5.24 \n 2  2019 Samut Prakan  (((687139.8 1517113, 687…     7.01e 9 &lt;int&gt; &lt;dbl&gt;   3.62 \n 3  2019 Nonthaburi    (((644817.9 1559286, 644…     4.66e 9 &lt;int&gt; &lt;dbl&gt;   2.83 \n 4  2019 Pathum Thani  (((704086 1575736, 70408…     3.47e 9 &lt;int&gt; &lt;dbl&gt;   2.33 \n 5  2019 Phra Nakhon … (((662941.6 1620856, 662…     1.92e10 &lt;int&gt; &lt;dbl&gt;  -0.653\n 6  2019 Ang Thong     (((643472.8 1636469, 643…     1.01e 9 &lt;int&gt; &lt;dbl&gt;  -0.568\n 7  2019 Lopburi       (((751293.3 1742960, 751…     5.75e 9 &lt;int&gt; &lt;dbl&gt;  -0.699\n 8  2019 Sing Buri     (((647136.1 1668671, 647…     8.78e 8 &lt;int&gt; &lt;dbl&gt;  -0.675\n 9  2019 Chainat       (((620165.4 1704256, 620…     1.34e 9 &lt;int&gt; &lt;dbl&gt;  -0.628\n10  2019 Saraburi      (((757935.1 1667886, 757…     6.81e 9 &lt;int&gt; &lt;dbl&gt;  -0.513\n# ℹ 375 more rows\n# ℹ 9 more variables: cluster &lt;fct&gt;, e_gi &lt;dbl&gt;, var_gi &lt;dbl&gt;, std_dev &lt;dbl&gt;,\n#   p_value &lt;dbl&gt;, p_sim &lt;dbl&gt;, p_folded_sim &lt;dbl&gt;, skewness &lt;dbl&gt;,\n#   kurtosis &lt;dbl&gt;\n\n\n\n\n\n\n\n\nH0: There is no monotonic trend over time\nH1: Monotonic trend is present\nReject null hypothesis if the p-value is smaller than alpha value\nTau range interpretation:\n\n-1 = perfectly decreasing series\n1 = perfectly increasing series\n\n\n\n\nLet us choose Bangkok to analyze as Bangkok has the highest revenue from tourism\n\ncbg &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(province_eng == \"Bangkok\") |&gt; \n  select(province_eng, year, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\n\n\nFindings:\n\nFrom 2019 to 2022, the Gi* value decreases, which indicates that there is an increasing trend towards cold spots during this period of time\nFrom 2022 to 2023, the Gi* value increases, which indicates that the spatial clustering increases towards hot spots in this period\n\n\ncbg %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n     tau    sl     S     D  varS                                        geometry\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                              &lt;MULTIPOLYGON [m]&gt;\n1 -0.600 0.221    -6    10  16.7 (((674339.8 1543300, 674382.3 1543278, 674448.…\n\n\nThe p-value is 0.22, we do not reject null hypothesis and conclude that there is no monotonic trend (Bangkok)\nWe can see the overall result per province using the following code\n\nehsa &lt;- gi_stars %&gt;%\n  group_by(province_eng) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\nhead(ehsa)\n\n# A tibble: 6 × 7\n  province_eng     tau    sl     S     D  varS                          geometry\n  &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                &lt;MULTIPOLYGON [m]&gt;\n1 Amnat Charoen  0     1         0    10  16.7 (((1137720 1809629, 1137724 1809…\n2 Ang Thong      0.400 0.462     4    10  16.7 (((643472.8 1636469, 643496 1636…\n3 Bangkok       -0.600 0.221    -6    10  16.7 (((674339.8 1543300, 674382.3 15…\n4 Bueng Kan      0.200 0.806     2    10  16.7 (((965496 2045531, 965625.5 2045…\n5 Buriram       -0.200 0.806    -2    10  16.7 (((921217 1750212, 921217 175021…\n6 Chachoengsao  -0.200 0.806    -2    10  16.7 (((722656.1 1546054, 722796 1546…\n\n\n\nehsa_desc &lt;- ehsa %&gt;%\n  arrange(desc(tau))\n\nhead(ehsa_desc)\n\n# A tibble: 6 × 7\n  province_eng            tau     sl     S     D  varS                  geometry\n  &lt;chr&gt;                 &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;        &lt;MULTIPOLYGON [m]&gt;\n1 Phra Nakhon Si Ayutt… 0.800 0.0864     8    10  16.7 (((662941.6 1620856, 662…\n2 Phayao                0.600 0.221      6    10  16.7 (((648755.2 2182064, 648…\n3 Uthai Thani           0.600 0.221      6    10  16.7 (((514892 1746436, 51490…\n4 Ang Thong             0.400 0.462      4    10  16.7 (((643472.8 1636469, 643…\n5 Loei                  0.400 0.462      4    10  16.7 (((827375.5 2016969, 827…\n6 Phetchabun            0.400 0.462      4    10  16.7 (((755146.4 1900816, 755…\n\n\nFindings: The shown sorted table is based on the Tau range, which shows that the value shown has increasing trend. The consistent growth indicates that there is potential growth in tourism revenue in these provinces.\n\nehsa_asc &lt;- ehsa %&gt;%\n  arrange(tau)\n\nhead(ehsa_asc)\n\n# A tibble: 6 × 7\n  province_eng           tau     sl     S     D  varS                   geometry\n  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;MULTIPOLYGON [m]&gt;\n1 Krabi               -0.800 0.0864    -8    10  16.7 (((512499 827838.6, 51250…\n2 Nakhon Si Thammarat -0.800 0.0864    -8    10  16.7 (((585074.4 1029631, 5850…\n3 Phang Nga           -0.800 0.0864    -8    10  16.7 (((457515.4 856050.4, 457…\n4 Trang               -0.800 0.0864    -8    10  16.7 (((552555.6 770748.6, 552…\n5 Bangkok             -0.600 0.221     -6    10  16.7 (((674339.8 1543300, 6743…\n6 Nonthaburi          -0.600 0.221     -6    10  16.7 (((644817.9 1559286, 6448…\n\n\nFindings: The provinces shown in above table indicates that those are the provinces with decreasing series. It is interesting to find that Bangkok is part of the top 5 decreasing series even though Bangkok has the highest revenue in tourism. This indicates that the tourism sector should pay more attention to these provinces and avoid decreasing trend.\n\n\n\n\n\nFrom the analysis, we can find that Bangkok area has a lot of tourism activity, but it doesnt show monotonic trend over time, which indicates that it is not an increasing trend and it fluctuates randomly over time. Under the hotspot and coldspot analysis, we can find that the Ubon-Ratchathani, Yasothon, Roi Et and Mukdahan provinces are considered as cold spots. This might indicate that these provinces lack of tourism infrastructure. It is a potential area for the Thailand tourism sector to pay more attention to and drive tourism traffic to the cold spots area and maintain stability of tourism activity in Bangkok area."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#overview",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#overview",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "In this analysis, we are interested to discover:\n\nIf the key indicators of tourism economy of Thailand are independent from space and time"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-started",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-started",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "pacman::p_load(sf, spdep, tmap, tidyverse, knitr, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, GGally, GWmodel,\n               ggstatsplot, Kendall, plotly, sfdep)\n\n\n\n\n\nAspatial DataGeospatial Data\n\n\n\ntourism &lt;- read_csv(\"data/aspatial/thailand_domestic_tourism_2019_2023_ver2.csv\") %&gt;% \n  mutate(year = year(date))\n\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nboundary &lt;- st_read(dsn = \"data/geospatial\",\n                        layer = \"tha_admbnda_adm1_rtsd_20220121\") %&gt;% \n  st_transform(crs = 32647)\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\brigittatsai\\ISSS626_AY2024-25_T1\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-wrangling",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "boundary &lt;- boundary %&gt;%\n  rename(province_eng = ADM1_EN)\n\n\nboundary &lt;- boundary[, !(names(boundary) %in% c(\"ADM3_REF\", \"ADM3ALT1EN\", \"ADM3ALT2EN\", \"ADM3ALT1TH\", \"ADM3ALT2TH\", \"ADM3_TH\",\"ADM2_TH\", \"ADM1_TH\", \"ADM0_TH\", \"ADM0_EN\", \"ADM0_PCODE\", \"ADM3_PCODE\", \"ADM2_PCODE\", \"validOn\", \"validTo\", \"ADM1_PCODE\", \"date\", \"ADM1_REF\", \"ADM1ALT1EN\", \"ADM1ALT2EN\", \"ADM1ALT1TH\", \"ADM1ALT2TH\"))]\n\n\nboundary[is.na(boundary$Shape_Leng), ]\n\nSimple feature collection with 0 features and 3 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n[1] Shape_Leng   Shape_Area   province_eng geometry    \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\n\n\n\ntourism &lt;- tourism[, !(names(tourism) %in% c(\"province_thai\", \"region_thai\"))]\n\n\nunique(tourism$variable)\n\n[1] \"ratio_tourist_stay\" \"no_tourist_stay\"    \"no_tourist_all\"    \n[4] \"no_tourist_thai\"    \"no_tourist_foreign\" \"revenue_all\"       \n[7] \"revenue_thai\"       \"revenue_foreign\"   \n\n\n\noptions(scipen = 999) # to display full number when summing up the value column\n\nRevenue generated by tourism industry\n\nrevenue_all &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"revenue_all\"))\n\n\nrevenue_all &lt;- revenue_all %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nrevenue_all &lt;- revenue_all %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nRevenue generated by Thai tourists\n\nrevenue_thai &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"revenue_thai\"))\n\n\nrevenue_thai &lt;- revenue_thai %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nrevenue_thai &lt;- revenue_thai %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nRevenue generated by foreign tourists\n\nrevenue_foreign &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"revenue_foreign\"))\n\n\nrevenue_foreign &lt;- revenue_foreign %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nrevenue_foreign &lt;- revenue_foreign %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of tourists who stay overnight\n\ntourist_stay &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_stay\"))\n\n\ntourist_stay &lt;- tourist_stay %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_stay &lt;- tourist_stay %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of domestic tourists who visited the province\n\ntourist_all &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_all\"))\n\n\ntourist_all &lt;- tourist_all %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_all &lt;- tourist_all %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of Thai tourists who visited the province\n\ntourist_thai &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_thai\"))\n\n\ntourist_thai &lt;- tourist_thai %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_thai &lt;- tourist_thai %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nNumber of foreign tourists who visited the province\n\ntourist_foreign &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"no_tourist_foreign\"))\n\n\ntourist_foreign &lt;- tourist_foreign %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n\ntourist_foreign &lt;- tourist_foreign %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nRatio of tourist stay overnight\nRatio = Total rooms booked/ total available rooms\n\nratio_tourist &lt;- tourism %&gt;%\n  filter(tourism$variable %in% c(\"ratio_tourist_stay\"))\n\nFor this column, we will use median to aggregate the values as it is not appropriate to sum ratio values\n\nratio_tourist &lt;- ratio_tourist %&gt;%\n  group_by(province_eng) %&gt;%\n  summarize(value = median(value, na.rm = TRUE),\n            variable = first(variable))\n\n\nratio_tourist &lt;- ratio_tourist %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\n\n\n\n\n\nAs seen in previous section, the tourism dataset is divided into each variables to sum the values. Let’s first join the tourism dataset into 1 again.\n\ntourism_data &lt;- revenue_all %&gt;%\n  left_join(revenue_thai, by = \"province_eng\") %&gt;%\n  left_join(revenue_foreign, by = \"province_eng\") %&gt;%\n  left_join(tourist_stay, by = \"province_eng\") %&gt;% \n  left_join(tourist_all, by = \"province_eng\") %&gt;% \n  left_join(tourist_thai, by = \"province_eng\") %&gt;% \n  left_join(tourist_foreign, by = \"province_eng\") %&gt;% \n  left_join(ratio_tourist, by = \"province_eng\")\n\n\n\n\nNow, let us join both boundary and tourism data\n\nthai_tourism &lt;- left_join(boundary, tourism_data, by = c(\"province_eng\"))\n\nLet us check if there is unmatched rows to ensure data is accurate\n\nunmatched &lt;- thai_tourism %&gt;% \n  filter(is.na(Shape_Leng))\n\nprint(unmatched)\n\nSimple feature collection with 0 features and 11 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n [1] Shape_Leng         Shape_Area         province_eng       revenue_all       \n [5] revenue_thai       revenue_foreign    no_tourist_stay    no_tourist_all    \n [9] no_tourist_thai    no_tourist_foreign ratio_tourist_stay geometry          \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nThere are multiple missing values after joining the table. This is due to different spacings of province name. Let us check using the code below\n\ncheck_value &lt;- tourism %&gt;%\n  filter(province_eng %in% c(\"Buriram\", \"Chainat\", \"Chonburi\", \"Lopburi\", \"Nong Bua Lamphu\", \"Phang Nga\", \"Prachinburi\", \"Sisaket\"))\n\nprint(check_value)\n\n# A tibble: 3,200 × 6\n   date       province_eng    region_eng     variable           value  year\n   &lt;date&gt;     &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;\n 1 2019-01-01 Lopburi         central        ratio_tourist_stay  61.3  2019\n 2 2019-01-01 Chainat         central        ratio_tourist_stay  79.3  2019\n 3 2019-01-01 Chonburi        east           ratio_tourist_stay  84.3  2019\n 4 2019-01-01 Prachinburi     east           ratio_tourist_stay  68.6  2019\n 5 2019-01-01 Phang Nga       south          ratio_tourist_stay  86.5  2019\n 6 2019-01-01 Buriram         east_northeast ratio_tourist_stay  71.3  2019\n 7 2019-01-01 Sisaket         south          ratio_tourist_stay  68.6  2019\n 8 2019-01-01 Nong Bua Lamphu east_northeast ratio_tourist_stay  65.0  2019\n 9 2020-01-01 Lopburi         central        ratio_tourist_stay  51.5  2020\n10 2020-01-01 Chainat         central        ratio_tourist_stay  73.5  2020\n# ℹ 3,190 more rows\n\n\n\ncheck_value2 &lt;- boundary %&gt;%\n  filter(province_eng %in% c(\"Buri Ram\", \"Chai Nat\", \"Chon Buri\", \"Lop Buri\", \"Nong Bua Lam Phu\", \"Phangnga\", \"Prachin Buri\", \"Si Sa Ket\"))\n\nprint(check_value2)\n\nSimple feature collection with 8 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 349324.1 ymin: 856050.4 xmax: 1137931 ymax: 1959175\nProjected CRS: WGS 84 / UTM zone 47N\n  Shape_Leng Shape_Area     province_eng                       geometry\n1   5.693342  0.5457884         Lop Buri MULTIPOLYGON (((751293.3 17...\n2   2.896316  0.2090783         Chai Nat MULTIPOLYGON (((620165.4 17...\n3   6.091786  0.3756301        Chon Buri MULTIPOLYGON (((714273.8 13...\n4   4.705205  0.4223316     Prachin Buri MULTIPOLYGON (((768228.7 15...\n5   8.701860  0.8445370         Buri Ram MULTIPOLYGON (((921217 1750...\n6   6.354893  0.7461402        Si Sa Ket MULTIPOLYGON (((1047999 172...\n7   4.478819  0.3451953 Nong Bua Lam Phu MULTIPOLYGON (((848689.2 19...\n8   9.158469  0.3364923         Phangnga MULTIPOLYGON (((457515.4 85...\n\n\nNotice that the writings are inconsistent. Let us standardize it by changing the name in the boundary data\n\nboundary &lt;- boundary %&gt;%\n  mutate(province_eng = recode(province_eng,\n                          \"Buri Ram\" = \"Buriram\",\n                          \"Chai Nat\" = \"Chainat\",\n                          \"Chon Buri\" = \"Chonburi\",\n                          \"Nong Bua Lam Phu\" = \"Nong Bua Lamphu\",\n                          \"Phangnga\" = \"Phang Nga\",\n                          \"Prachin Buri\" = \"Prachinburi\",\n                          \"Si Sa Ket\" = \"Sisaket\",\n                          \"Lop Buri\" = \"Lopburi\"))\n\nLet us join the table again\n\nthai_tourism &lt;- left_join(boundary, tourism_data, by = c(\"province_eng\"))\n\nLet us do final check if there is any missing value\n\nmissing &lt;- thai_tourism %&gt;% \n  filter(is.na(Shape_Leng))\n\nprint(missing)\n\nSimple feature collection with 0 features and 11 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n [1] Shape_Leng         Shape_Area         province_eng       revenue_all       \n [5] revenue_thai       revenue_foreign    no_tourist_stay    no_tourist_all    \n [9] no_tourist_thai    no_tourist_foreign ratio_tourist_stay geometry          \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nThere is no missing value in the final dataset. The dataset is ready to be used for analysis\n\n\n\n\nLet us create a time series cube based on the revenue generated from tourism in Thailand\n\ntourism_revenue &lt;- tourism %&gt;%\n  filter(variable %in% c(\"revenue_all\"))\n\nDerive a dataframe grouped by the year and province in Thailand\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  group_by(year, province_eng) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\n\ntourism_st &lt;- spacetime(tourism_revenue, boundary,\n                      .loc_col = \"province_eng\",\n                      .time_col = \"year\")\n\n\nis_spacetime_cube(tourism_st)\n\n[1] TRUE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#geographically-weighted-summary-statistics",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#geographically-weighted-summary-statistics",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "class(thai_tourism)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\nbasemap &lt;- tm_shape(thai_tourism) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size=0.5)\n\ngdppc &lt;- qtm(thai_tourism, \"revenue_all\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\nSome legend labels were too wide. These labels have been resized to 0.64, 0.64. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\n\n\n\nbasemap &lt;- tm_shape(thai_tourism) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size=0.5)\n\ngdppc &lt;- qtm(thai_tourism, \"no_tourist_thai\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\nbasemap &lt;- tm_shape(thai_tourism) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size=0.5)\n\ngdppc &lt;- qtm(thai_tourism, \"no_tourist_foreign\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\nFindings:\nFrom the choropleth map, we can roughly see that most foreign tourist visits Bangkok area and Chonburi area, which makes the revenue from tourist are heavy on the Bangkok area, while thailand tourists are more spread out across the region.\n\n\n\n\nthai_tourism_sp &lt;- thai_tourism %&gt;% \n  as_Spatial()\n\n\n\n\n\n\n\nCross-ValidationAIC\n\n\n\nbw_CV &lt;- bw.gwr(revenue_all ~ 1, \n             data = thai_tourism_sp,\n             approach = \"CV\",\n             adaptive = TRUE, \n             kernel = \"bisquare\", \n             longlat = T)\n\nAdaptive bandwidth: 55 CV score: 4428033682012956772066406 \nAdaptive bandwidth: 42 CV score: 4500834259376365885224440 \nAdaptive bandwidth: 64 CV score: 4381413976764054394448466 \nAdaptive bandwidth: 68 CV score: 4361239963255682344428408 \nAdaptive bandwidth: 72 CV score: 4345180954006887388486882 \nAdaptive bandwidth: 73 CV score: 4341733369505226221800826 \nAdaptive bandwidth: 75 CV score: 4335011644352382000840428 \nAdaptive bandwidth: 75 CV score: 4335011644352382000840428 \n\n\n\nbw_CV\n\n[1] 75\n\n\n\n\n\nbw_AIC &lt;- bw.gwr(revenue_all ~ 1, \n             data = thai_tourism_sp,\n             approach =\"AIC\",\n             adaptive = TRUE, \n             kernel = \"bisquare\", \n             longlat = T)\n\nAdaptive bandwidth (number of nearest neighbours): 55 AICc value: 4257.211 \nAdaptive bandwidth (number of nearest neighbours): 42 AICc value: 4258.925 \nAdaptive bandwidth (number of nearest neighbours): 64 AICc value: 4256.018 \nAdaptive bandwidth (number of nearest neighbours): 68 AICc value: 4255.513 \nAdaptive bandwidth (number of nearest neighbours): 72 AICc value: 4255.01 \nAdaptive bandwidth (number of nearest neighbours): 73 AICc value: 4254.876 \nAdaptive bandwidth (number of nearest neighbours): 75 AICc value: 4254.645 \nAdaptive bandwidth (number of nearest neighbours): 75 AICc value: 4254.645 \n\n\n\nbw_AIC\n\n[1] 75\n\n\n\n\n\n\n\n\n\ngwstat &lt;- gwss(data = thai_tourism_sp,\n               vars = \"revenue_all\",\n               bw = bw_AIC,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\n\n\ngwstat\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n\n   ***********************Calibration information*************************\n\n   Local summary statistics calculated for variables:\n    revenue_all\n   Number of summary points: 77\n   Kernel function: bisquare \n   Summary points: the same locations as observations are used.\n   Adaptive bandwidth: 75 (number of nearest neighbours)\n   Distance metric: Great Circle distance metric is used.\n\n   ************************Local Summary Statistics:**********************\n   Summary information for Local means:\nrevenue_all_LM \n       Min.     1st Qu.      Median     3rd Qu.        Max. \n38547533805 50753907508 69229936334 81792139502 93215970572 \n   Summary information for local standard deviation :\nrevenue_all_LSD \n        Min.      1st Qu.       Median      3rd Qu.         Max. \n108209116300 161382206285 232157919632 282418062711 304777922969 \n   Summary information for local variance :\nrevenue_all_LVar \n                   Min.                 1st Qu.                  Median \n11709212850467257713840 26044216505375674860220 53897299647833038652842 \n                3rd Qu.                    Max. \n79759962145408084344682 92889582329423068146404 \n   Summary information for Local skewness:\nrevenue_all_LSKe \n    Min.  1st Qu.   Median  3rd Qu.     Max. \n4.949413 5.332615 5.651104 6.384997 8.984196 \n   Summary information for localized coefficient of variation:\nrevenue_all_LCV \n    Min.  1st Qu.   Median  3rd Qu.     Max. \n2.793948 3.082332 3.338459 3.501539 3.793002 \n\n   ************************************************************************\n\n\n\n\n\n\ngwstat_tourism &lt;- as.data.frame(gwstat$SDF)\n\n\nthai_gstat &lt;- cbind(thai_tourism, gwstat_tourism)\n\n\n\n\n\ntm_shape(thai_gstat) +\n  tm_fill(\"revenue_all_LM\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Revenue Distribution\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size = 0.5,\n            legend.height = 1.50, \n            legend.width = 1.50,\n            frame = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngwstat &lt;- gwss(data = thai_tourism_sp,\n               vars = \"revenue_all\",\n               bw = bw_AIC,\n               kernel = \"bisquare\",\n               adaptive = FALSE,\n               longlat = T)\n\n\n\n\n\ngwstat_tourism &lt;- as.data.frame(gwstat$SDF)\n\n\nthai_gstat &lt;- cbind(thai_tourism, gwstat_tourism)\n\n\n\n\n\ntm_shape(thai_gstat) +\n  tm_fill(\"revenue_all_LM\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Revenue Distribution\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size = 0.5,\n            legend.height = 1.50, \n            legend.width = 1.50,\n            frame = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-measures-of-spatial-association",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#global-measures-of-spatial-association",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "wm_q &lt;- poly2nb(thai_tourism, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n\n\n\n\n\n\nmoran.test(thai_tourism$revenue_all, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$revenue_all  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = -0.38565, p-value = 0.6501\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.032059694      -0.013333333       0.002357817 \n\n\n\nmoran.test(thai_tourism$revenue_foreign, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$revenue_foreign  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = -0.14552, p-value = 0.5578\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.021359589      -0.013333333       0.003042335 \n\n\n\nmoran.test(thai_tourism$revenue_thai, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$revenue_thai  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = -0.59004, p-value = 0.7224\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.037892905      -0.013333333       0.001732513 \n\n\n\nmoran.test(thai_tourism$no_tourist_all, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  thai_tourism$no_tourist_all  \nweights: rswm_q  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 0.24853, p-value = 0.4019\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     -0.001276884      -0.013333333       0.002353354"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#local-measures-of-spatial-association",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#local-measures-of-spatial-association",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "wm_q &lt;- poly2nb(thai_tourism, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n\n\n\n\n\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n\n\n\n\n\n\nComputing Local Moran’s ILocal Moran’s I Valuesp-values\n\n\n\nfips &lt;- order(thai_tourism$province_eng)\nlocalMI &lt;- localmoran(thai_tourism$revenue_all, rswm_q)\nhead(localMI)\n\n           Ii          E.Ii      Var.Ii       Z.Ii  Pr(z != E(Ii))\n1 -1.83799860 -0.7673501158 2.138319789 -0.7321677 0.4640662019682\n2 -0.84568638 -0.0006847924 0.025995168 -5.2409644 0.0000001597396\n3 -0.42360090 -0.0007593821 0.014022725 -3.5707662 0.0003559385446\n4 -0.28298520 -0.0008584885 0.010273957 -2.7833981 0.0053792760572\n5  0.02378074 -0.0001327355 0.001343105  0.6525108 0.5140716849302\n6  0.05716301 -0.0010121113 0.018684887  0.4255906 0.6704061909293\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=thai_tourism$province_eng[fips]),\n  check.names=FALSE)\n\n                                     Ii           E.Ii         Var.Ii\nAmnat Charoen             0.07083095475 -0.00105904034  0.02642916197\nAng Thong                 0.05716300575 -0.00101211133  0.01868488708\nBangkok                  -1.83799860222 -0.76735011581  2.13831978877\nBueng Kan                 0.06881951236 -0.00099856395  0.02492143607\nBuriram                   0.04116994539 -0.00065817138  0.00958894589\nChachoengsao             -0.22456652797 -0.00065230008  0.00568869225\nChainat                   0.06867867168 -0.00098407156  0.01816774650\nChaiyaphum                0.03835985563 -0.00092325362  0.01704597461\nChanthaburi              -0.04814604279 -0.00050560248  0.00736728315\nChiang Mai               -0.13450098001 -0.00900973280  0.13016646377\nChiang Rai                0.01339027016 -0.00019489395  0.00486793509\nChonburi                 -0.25218265411 -0.04201669166  1.00556665353\nChumphon                 -0.02346538797 -0.00066103325  0.01650316319\nKalasin                   0.06188701939 -0.00100372369  0.01201031217\nKamphaeng Phet            0.06208705355 -0.00095083753  0.01384876288\nKanchanaburi             -0.01074825111 -0.00002760711  0.00040246374\nKhon Kaen                 0.02447102795 -0.00016316642  0.00124687144\nKrabi                     0.00647413741 -0.00235563243  0.04342954175\nLampang                   0.01006584072 -0.00070044464  0.00708353470\nLamphun                  -0.03456619366 -0.00094275090  0.02352980870\nLoei                      0.04652147598 -0.00073364096  0.00878094156\nLopburi                   0.04536393836 -0.00066944698  0.00583812969\nMae Hong Son             -0.07005053891 -0.00067593902  0.02565931441\nMaha Sarakham             0.06312827899 -0.00100611120  0.01465300243\nMukdahan                  0.06848945114 -0.00083509460  0.00999422441\nNakhon Nayok              0.04199015929 -0.00061097167  0.00890171030\nNakhon Pathom            -0.21489161570 -0.00068217102  0.00689886133\nNakhon Phanom             0.06804738203 -0.00088800034  0.02216452217\nNakhon Ratchasima         0.01076889014 -0.00003334270  0.00029096091\nNakhon Sawan              0.05851084146 -0.00072892287  0.00635643021\nNakhon Si Thammarat      -0.01515857173 -0.00026910394  0.00392212091\nNan                       0.06577903280 -0.00081505703  0.02034533972\nNarathiwat                0.07090949568 -0.00093157452  0.03535444476\nNong Bua Lamphu           0.04940749978 -0.00106478228  0.02657230378\nNong Khai                 0.05455144398 -0.00070366504  0.01299457961\nNonthaburi               -0.42360089900 -0.00075938213  0.01402272512\nPathum Thani             -0.28298519751 -0.00085848855  0.01027395737\nPattani                   0.03033040601 -0.00101893481  0.02542931850\nPhang Nga                 0.00535962987 -0.00001131013  0.00028254911\nPhatthalung               0.02253659477 -0.00090214141  0.01665653314\nPhayao                    0.04127232904 -0.00093588252  0.01727892278\nPhetchabun                0.04206480973 -0.00048503171  0.00490614010\nPhetchaburi              -0.00701853785 -0.00006659779  0.00166364987\nPhichit                   0.05997445991 -0.00096541858  0.01782371136\nPhitsanulok               0.04681828255 -0.00047233482  0.00565484930\nPhra Nakhon Si Ayutthaya  0.02378073991 -0.00013273550  0.00134310492\nPhrae                     0.06585844780 -0.00089707848  0.01306647591\nPhuket                    0.00000000000  0.00000000000  0.00000000000\nPrachinburi               0.04194069463 -0.00072835530  0.01345020233\nPrachuap Khiri Khan      -0.01444030941 -0.00046885706  0.01780196628\nRanong                   -0.01580883037 -0.00085754128  0.02140491550\nRatchaburi                0.03039770577 -0.00078959962  0.01150222035\nRayong                   -0.00373054925 -0.00000028939  0.00001099288\nRoi Et                    0.07316891133 -0.00097817034  0.01170484641\nSa Kaeo                   0.04167731057 -0.00066355668  0.00966735249\nSakon Nakhon              0.06323140237 -0.00087858230  0.01051421782\nSamut Prakan             -0.84568638003 -0.00068479243  0.02599516847\nSamut Sakhon             -0.46727833706 -0.00095876757  0.01770103720\nSamut Songkhram           0.03546514819 -0.00075636501  0.01888138672\nSaraburi                  0.03568908684 -0.00058367125  0.00850418209\nSatun                     0.01727953128 -0.00047189614  0.01178345101\nSing Buri                 0.06849618922 -0.00101639120  0.01480256807\nSisaket                   0.06869155659 -0.00094121430  0.01737726911\nSongkhla                 -0.04369438435 -0.00049426294  0.00720213315\nSukhothai                 0.05929615194 -0.00082070118  0.00982210874\nSuphan Buri               0.04352690070 -0.00063973702  0.00646999691\nSurat Thani              -0.01294059772 -0.00190596312  0.02773344116\nSurin                     0.06699652147 -0.00087318251  0.01612232273\nTak                       0.02038725673 -0.00057672306  0.00440533087\nTrang                     0.00879964494 -0.00055674285  0.01028287975\nTrat                      0.02097512255 -0.00015065121  0.01159839596\nUbon Ratchathani          0.06005136322 -0.00061752391  0.01541759291\nUdon Thani                0.04043400005 -0.00039635734  0.00474559843\nUthai Thani               0.04834655198 -0.00096439423  0.01404602297\nUttaradit                 0.06290286784 -0.00092453752  0.01706965728\nYala                      0.02976267619 -0.00085365356  0.02130795790\nYasothon                  0.07248548039 -0.00103478400  0.01507016045\n                                   Z.Ii Pr.z....E.Ii..\nAmnat Charoen             0.44220816550         0.6583\nAng Thong                 0.42559060009         0.6704\nBangkok                  -0.73216772361         0.4641\nBueng Kan                 0.44226375235         0.6583\nBuriram                   0.42715242646         0.6693\nChachoengsao             -2.96876260231         0.0030\nChainat                   0.51683276920         0.6053\nChaiyaphum                0.30088111946         0.7635\nChanthaburi              -0.55503719283         0.5789\nChiang Mai               -0.34782747363         0.7280\nChiang Rai                0.19471190228         0.8456\nChonburi                 -0.20958343283         0.8340\nChumphon                 -0.17751464598         0.8591\nKalasin                   0.57386478914         0.5661\nKamphaeng Phet            0.53566859548         0.5922\nKanchanaburi             -0.53438898432         0.5931\nKhon Kaen                 0.69763381711         0.4854\nKrabi                     0.04236983376         0.9662\nLampang                   0.12792071369         0.8982\nLamphun                  -0.21919618006         0.8265\nLoei                      0.50428761107         0.6141\nLopburi                   0.60247085905         0.5469\nMae Hong Son             -0.43308981172         0.6649\nMaha Sarakham             0.52981915887         0.5962\nMukdahan                  0.69344573929         0.4880\nNakhon Nayok              0.45152770242         0.6516\nNakhon Pathom            -2.57899148032         0.0099\nNakhon Phanom             0.46303412841         0.6433\nNakhon Ratchasima         0.63328064352         0.5266\nNakhon Sawan              0.74303056745         0.4575\nNakhon Si Thammarat      -0.23774899263         0.8121\nNan                       0.46687779020         0.6406\nNarathiwat                0.38207690115         0.7024\nNong Bua Lamphu           0.30962665227         0.7568\nNong Khai                 0.48472042815         0.6279\nNonthaburi               -3.57076617157         0.0004\nPathum Thani             -2.78339807865         0.0054\nPattani                   0.19658983250         0.8441\nPhang Nga                 0.31952388681         0.7493\nPhatthalung               0.18161088889         0.8559\nPhayao                    0.32109875280         0.7481\nPhetchabun                0.60747438907         0.5435\nPhetchaburi              -0.17044138455         0.8647\nPhichit                   0.45645977698         0.6481\nPhitsanulok               0.62887519637         0.5294\nPhra Nakhon Si Ayutthaya  0.65251083582         0.5141\nPhrae                     0.58399346585         0.5592\nPhuket                              NaN            NaN\nPrachinburi               0.36791590620         0.7129\nPrachuap Khiri Khan      -0.10471467926         0.9166\nRanong                   -0.10219317212         0.9186\nRatchaburi                0.29079505125         0.7712\nRayong                   -1.12507965880         0.2606\nRoi Et                    0.68534808378         0.4931\nSa Kaeo                   0.43063167601         0.6667\nSakon Nakhon              0.62522622775         0.5318\nSamut Prakan             -5.24096436405         0.0000\nSamut Sakhon             -3.50496983019         0.0005\nSamut Songkhram           0.26360257354         0.7921\nSaraburi                  0.39333654998         0.6941\nSatun                     0.16352984708         0.8701\nSing Buri                 0.57134032448         0.5678\nSisaket                   0.52822981910         0.5973\nSongkhla                 -0.50904291159         0.6107\nSukhothai                 0.60658807756         0.5441\nSuphan Buri               0.54908844219         0.5829\nSurat Thani              -0.06626070868         0.9472\nSurin                     0.53451777233         0.5930\nTak                       0.31585260712         0.7521\nTrang                     0.09226794222         0.9265\nTrat                      0.19616144815         0.8445\nUbon Ratchathani          0.48860481380         0.6251\nUdon Thani                0.59270376863         0.5534\nUthai Thani               0.41607023571         0.6774\nUttaradit                 0.48853399479         0.6252\nYala                      0.20974045792         0.8339\nYasothon                  0.59889146247         0.5492\n\n\n\nthai_tourism.localMI &lt;- cbind(thai_tourism,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n\ntm_shape(thai_tourism.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(thai_tourism.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\nSome legend labels were too wide. These labels have been resized to 0.61. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnci &lt;- moran.plot(thai_tourism$revenue_all, rswm_q,\n                  labels=as.character(thai_tourism$province_eng), \n                  xlab=\"Revenue from Tourist\", \n                  ylab=\"Spatially Lag Revenue from Tourist\")\n\n\n\n\n\n\n\n\nAs seen from the scatter plot, it can be seen that Chonburi, Phuket and Bangkok is way further from the cluster\n\n\n\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n\nthai_tourism$lag_revenue &lt;- lag.listw(rswm_q, thai_tourism$revenue_all)\nDV &lt;- thai_tourism$lag_revenue - mean(thai_tourism$lag_revenue)     \n\nCentering local Moran around the mean value\n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nSet a statistical significance level\n\nsignif &lt;- 0.05\n\n\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 1 # low low\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2 # high low\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3 # low high\nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4 # high high\n\nThe non significant value of Moran will be placed in category 0\n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\n\n\n\nthai_tourism.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(thai_tourism.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\nFrom the LISA Map, we can see that all the provinces surrounding Bangkok is a low-high autocorrelation, which means that all the surrounding provinces are low outlier, whereas Bangkok is a high outlier in terms of revenue from all tourists."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "wm_idw &lt;- thai_tourism %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wts = st_inverse_distance(nb, \n                              geometry, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n\n! Polygon provided. Using point on surface.\n\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    revenue_all, nb, wts, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 77 features and 24 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 77 × 25\n   gi_star cluster     e_gi   var_gi std_dev p_value p_sim p_folded_sim skewness\n     &lt;dbl&gt; &lt;fct&gt;      &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1  -0.533 High     1.25e-6 1.69e-12  -0.703 4.82e-1  0.28         0.14     1.82\n 2   7.45  Low      1.22e-6 1.14e-11   5.28  1.31e-7  0.08         0.04     4.64\n 3   3.49  Low      1.57e-6 8.33e-12   3.04  2.40e-3  0.12         0.06     2.91\n 4   3.05  Low      1.38e-6 6.11e-12   3.11  1.85e-3  0.1          0.05     3.91\n 5  -0.627 Low      1.25e-6 2.07e-12  -0.668 5.04e-1  0.3          0.15     2.32\n 6  -0.387 Low      1.25e-6 4.45e-12  -0.407 6.84e-1  0.98         0.49     3.04\n 7  -0.594 Low      1.03e-6 1.74e-12  -0.538 5.91e-1  0.6          0.3      2.83\n 8  -0.549 Low      1.46e-6 5.35e-12  -0.563 5.73e-1  0.14         0.07     2.59\n 9  -0.509 Low      1.16e-6 3.63e-12  -0.549 5.83e-1  0.16         0.08     3.05\n10  -0.395 Low      7.75e-7 1.38e-12  -0.337 7.36e-1  1            0.5      3.10\n# ℹ 67 more rows\n# ℹ 16 more variables: kurtosis &lt;dbl&gt;, nb &lt;nb&gt;, wts &lt;list&gt;, Shape_Leng &lt;dbl&gt;,\n#   Shape_Area &lt;dbl&gt;, province_eng &lt;chr&gt;, revenue_all &lt;dbl&gt;,\n#   revenue_thai &lt;dbl&gt;, revenue_foreign &lt;dbl&gt;, no_tourist_stay &lt;dbl&gt;,\n#   no_tourist_all &lt;dbl&gt;, no_tourist_thai &lt;dbl&gt;, no_tourist_foreign &lt;dbl&gt;,\n#   ratio_tourist_stay &lt;dbl&gt;, geometry &lt;MULTIPOLYGON [m]&gt;, lag_revenue &lt;dbl&gt;\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") + \n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n\n\n\n\n\n\n\n\n\nFindings: There is no hotspot area in the plot above and there are coldspots identified in Ubon-Ratchathani, Yasothon, Roi Et and Mukdahan provinces."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#correlation-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#correlation-analysis",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "cluster_vars.cor = cor(tourism_data[,2:9])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\nFrom the correlation analysis, there is an interesting finding. Overall revenue are strongly correlated with number of foreign tourist, but it’s less stronger with the number of thai tourists. This may be due to foreign tourists contributing more revenue and spending more money as compared to local tourists."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#emerging-hotspot-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#emerging-hotspot-analysis",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Let us create a time series cube based on the revenue generated from tourism in Thailand\n\ntourism_revenue &lt;- tourism %&gt;%\n  filter(variable %in% c(\"revenue_all\"))\n\n\ntourism_revenue &lt;- left_join(boundary, tourism_revenue, by = c(\"province_eng\"))\n\nDerive a dataframe grouped by the year and province in Thailand\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  group_by(year, province_eng, geometry) %&gt;%\n  summarize(value = sum(value, na.rm = TRUE),\n            variable = first(variable))\n\n`summarise()` has grouped output by 'year', 'province_eng'. You can override\nusing the `.groups` argument.\n\n\n\ntourism_revenue &lt;- tourism_revenue %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\n\ntourism_st &lt;- spacetime(tourism_revenue, boundary,\n                      .loc_col = \"province_eng\",\n                      .time_col = \"year\")\n\n\nis_spacetime_cube(tourism_st)\n\n[1] TRUE\n\n\n\n\n\n\n\n\ntourism_nb &lt;- tourism_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb, \n                             geometry, \n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n! Polygon provided. Using point on surface.\n\n\n\n\n\n\ngi_stars &lt;- tourism_nb %&gt;% \n  group_by(year) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    revenue_all, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\ngi_stars\n\nSimple feature collection with 385 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 385 × 16\n# Groups:   year [5]\n    year province_eng                   geometry revenue_all nb    wt    gi_star\n   &lt;dbl&gt; &lt;chr&gt;                &lt;MULTIPOLYGON [m]&gt;       &lt;dbl&gt; &lt;lis&gt; &lt;lis&gt;   &lt;dbl&gt;\n 1  2019 Bangkok       (((674339.8 1543300, 674…     1.07e12 &lt;int&gt; &lt;dbl&gt;   5.24 \n 2  2019 Samut Prakan  (((687139.8 1517113, 687…     7.01e 9 &lt;int&gt; &lt;dbl&gt;   3.62 \n 3  2019 Nonthaburi    (((644817.9 1559286, 644…     4.66e 9 &lt;int&gt; &lt;dbl&gt;   2.83 \n 4  2019 Pathum Thani  (((704086 1575736, 70408…     3.47e 9 &lt;int&gt; &lt;dbl&gt;   2.33 \n 5  2019 Phra Nakhon … (((662941.6 1620856, 662…     1.92e10 &lt;int&gt; &lt;dbl&gt;  -0.653\n 6  2019 Ang Thong     (((643472.8 1636469, 643…     1.01e 9 &lt;int&gt; &lt;dbl&gt;  -0.568\n 7  2019 Lopburi       (((751293.3 1742960, 751…     5.75e 9 &lt;int&gt; &lt;dbl&gt;  -0.699\n 8  2019 Sing Buri     (((647136.1 1668671, 647…     8.78e 8 &lt;int&gt; &lt;dbl&gt;  -0.675\n 9  2019 Chainat       (((620165.4 1704256, 620…     1.34e 9 &lt;int&gt; &lt;dbl&gt;  -0.628\n10  2019 Saraburi      (((757935.1 1667886, 757…     6.81e 9 &lt;int&gt; &lt;dbl&gt;  -0.513\n# ℹ 375 more rows\n# ℹ 9 more variables: cluster &lt;fct&gt;, e_gi &lt;dbl&gt;, var_gi &lt;dbl&gt;, std_dev &lt;dbl&gt;,\n#   p_value &lt;dbl&gt;, p_sim &lt;dbl&gt;, p_folded_sim &lt;dbl&gt;, skewness &lt;dbl&gt;,\n#   kurtosis &lt;dbl&gt;\n\n\n\n\n\n\n\n\nH0: There is no monotonic trend over time\nH1: Monotonic trend is present\nReject null hypothesis if the p-value is smaller than alpha value\nTau range interpretation:\n\n-1 = perfectly decreasing series\n1 = perfectly increasing series\n\n\n\n\nLet us choose Bangkok to analyze as Bangkok has the highest revenue from tourism\n\ncbg &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(province_eng == \"Bangkok\") |&gt; \n  select(province_eng, year, gi_star)\n\n\nggplot(data = cbg, \n       aes(x = year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\n\n\nFindings:\n\nFrom 2019 to 2022, the Gi* value decreases, which indicates that there is an increasing trend towards cold spots during this period of time\nFrom 2022 to 2023, the Gi* value increases, which indicates that the spatial clustering increases towards hot spots in this period\n\n\ncbg %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  tidyr::unnest_wider(mk)\n\n# A tibble: 1 × 6\n     tau    sl     S     D  varS                                        geometry\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                              &lt;MULTIPOLYGON [m]&gt;\n1 -0.600 0.221    -6    10  16.7 (((674339.8 1543300, 674382.3 1543278, 674448.…\n\n\nThe p-value is 0.22, we do not reject null hypothesis and conclude that there is no monotonic trend (Bangkok)\nWe can see the overall result per province using the following code\n\nehsa &lt;- gi_stars %&gt;%\n  group_by(province_eng) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\nhead(ehsa)\n\n# A tibble: 6 × 7\n  province_eng     tau    sl     S     D  varS                          geometry\n  &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                &lt;MULTIPOLYGON [m]&gt;\n1 Amnat Charoen  0     1         0    10  16.7 (((1137720 1809629, 1137724 1809…\n2 Ang Thong      0.400 0.462     4    10  16.7 (((643472.8 1636469, 643496 1636…\n3 Bangkok       -0.600 0.221    -6    10  16.7 (((674339.8 1543300, 674382.3 15…\n4 Bueng Kan      0.200 0.806     2    10  16.7 (((965496 2045531, 965625.5 2045…\n5 Buriram       -0.200 0.806    -2    10  16.7 (((921217 1750212, 921217 175021…\n6 Chachoengsao  -0.200 0.806    -2    10  16.7 (((722656.1 1546054, 722796 1546…\n\n\n\nehsa_desc &lt;- ehsa %&gt;%\n  arrange(desc(tau))\n\nhead(ehsa_desc)\n\n# A tibble: 6 × 7\n  province_eng            tau     sl     S     D  varS                  geometry\n  &lt;chr&gt;                 &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;        &lt;MULTIPOLYGON [m]&gt;\n1 Phra Nakhon Si Ayutt… 0.800 0.0864     8    10  16.7 (((662941.6 1620856, 662…\n2 Phayao                0.600 0.221      6    10  16.7 (((648755.2 2182064, 648…\n3 Uthai Thani           0.600 0.221      6    10  16.7 (((514892 1746436, 51490…\n4 Ang Thong             0.400 0.462      4    10  16.7 (((643472.8 1636469, 643…\n5 Loei                  0.400 0.462      4    10  16.7 (((827375.5 2016969, 827…\n6 Phetchabun            0.400 0.462      4    10  16.7 (((755146.4 1900816, 755…\n\n\nFindings: The shown sorted table is based on the Tau range, which shows that the value shown has increasing trend. The consistent growth indicates that there is potential growth in tourism revenue in these provinces.\n\nehsa_asc &lt;- ehsa %&gt;%\n  arrange(tau)\n\nhead(ehsa_asc)\n\n# A tibble: 6 × 7\n  province_eng           tau     sl     S     D  varS                   geometry\n  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;MULTIPOLYGON [m]&gt;\n1 Krabi               -0.800 0.0864    -8    10  16.7 (((512499 827838.6, 51250…\n2 Nakhon Si Thammarat -0.800 0.0864    -8    10  16.7 (((585074.4 1029631, 5850…\n3 Phang Nga           -0.800 0.0864    -8    10  16.7 (((457515.4 856050.4, 457…\n4 Trang               -0.800 0.0864    -8    10  16.7 (((552555.6 770748.6, 552…\n5 Bangkok             -0.600 0.221     -6    10  16.7 (((674339.8 1543300, 6743…\n6 Nonthaburi          -0.600 0.221     -6    10  16.7 (((644817.9 1559286, 6448…\n\n\nFindings: The provinces shown in above table indicates that those are the provinces with decreasing series. It is interesting to find that Bangkok is part of the top 5 decreasing series even though Bangkok has the highest revenue in tourism. This indicates that the tourism sector should pay more attention to these provinces and avoid decreasing trend."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#conclusion",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "From the analysis, we can find that Bangkok area has a lot of tourism activity, but it doesnt show monotonic trend over time, which indicates that it is not an increasing trend and it fluctuates randomly over time. Under the hotspot and coldspot analysis, we can find that the Ubon-Ratchathani, Yasothon, Roi Et and Mukdahan provinces are considered as cold spots. This might indicate that these provinces lack of tourism infrastructure. It is a potential area for the Thailand tourism sector to pay more attention to and drive tourism traffic to the cold spots area and maintain stability of tourism activity in Bangkok area."
  }
]