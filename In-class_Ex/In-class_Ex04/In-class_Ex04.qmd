---
title: "In-class Exercise 4"
author: "Brigitta Karen Tsai"
date: "September 16, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  message: false
  freeze: true
---

# Geographically Weighted

Package: GWmodel

Function **bw.gwr** is used for automatic bandwidth selection to calibrate a basic GWR model

## Load R Packages

```{r}
pacman::p_load(sf, ggstatsplot, tmap, tidyverse, knitr, GWmodel)
```

## Import Dataset into R

```{r}
hunan_sf <- st_read(dsn = "data/geospatial",
                    layer = "Hunan")
```

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
hunan_sf <- left_join(hunan_sf,hunan2012) %>%
  select(1:3, 7, 15, 16, 31, 32)
```

## Converting to Spatial Polygon Data Frame

```{r}
hunan_sp <- hunan_sf %>%
  as_Spatial()
```

## Geographically Weighted Summary Statistics with Adaptive Bandwidth

#### **Approach 1: Cross-validation:**

```{r}
bw_CV <- bw.gwr(GDPPC ~ 1,
                data = hunan_sp,
                approach = "CV",
                adaptive = TRUE,
                kernel = "bisquare",
                longlat = T)
```

```{r}
bw_CV
```

The result above is the number of neighbours, hence the number of optimum neighbours is 22.

#### Approach 2: AIC

```{r}
bw_AIC <- bw.gwr(GDPPC ~ 1,
                data = hunan_sp,
                approach = "AIC",
                adaptive = TRUE,
                kernel = "bisquare",
                longlat = T)
```

```{r}
bw_AIC
```

The number of optimum neighbour is also 22.

### Computing geographically weighted summary statistics

```{r}
gwstat <- gwss(data = hunan_sp,
               vars = "GDPPC",
               bw = bw_AIC,
               kernel = "bisquare",
               adaptive = TRUE,
               longlat = T)
```

```{r}
gwstat
```

#### Preparing the output data

```{r}
gwstat_df <- as.data.frame(gwstat$SDF)
```

**cbind()** is used to append the newly derived data.frame onto hunan_sf sf dataframe

```{r}
hunan_gstat <- cbind(hunan_sf, gwstat_df)
```

## Geographically Weighted Summary Statistics with Fixed Bandwidth

#### Approach 1: Cross-validation

```{r}
bw_CV <- bw.gwr(GDPPC ~ 1,
                data = hunan_sp,
                approach = "CV",
                adaptive = FALSE,
                kernel = "bisquare",
                longlat = T)
```

#### Approach 2: AIC

```{r}
bw_AIC <- bw.gwr(GDPPC ~ 1,
                data = hunan_sp,
                approach = "AIC",
                adaptive = FALSE,
                kernel = "bisquare",
                longlat = T)
```

Fixed bandwidth is in distance (km), hence the value varies more. For the adaptive bandwidth, only use boundaries and number of neighbours, hence the value is more fixed.
