---
title: "Hands-on Exercise 3"
author: "Brigitta Karen Tsai"
date: "September 7, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  message: false
  freeze: true
---

### Load and Install R Packages

```{r}
pacman::p_load(sf, spNetwork, tmap, tidyverse)
```

### Data Import and Preparation

**Import Punggol_St dataset**

```{r}
network <- st_read(dsn="data/geospatial", 
                   layer="Punggol_St")
```

```{r}
network
```

**Import Punggol_CC dataset**

```{r}
childcare <- st_read(dsn="data/geospatial",
                     layer="Punggol_CC")
```

```{r}
childcare
```

### Visualising the Geospatial Data

**Plot the network data**

```{r}
plot(st_geometry(network))
plot(childcare,add=T,col='red',pch = 19)
```

**Visualise with high cartographic quality and interactive manner**

```{r}
tmap_mode('plot')
tm_shape(childcare) + 
  tm_dots() + 
  tm_shape(network) +
  tm_lines()
```

```{r}
tmap_mode('plot')
```

### Network KDE Analysis (NKDE)

Perform NKDE analysis using functions provided in **spNetwork** package

#### Preparing the lixels objects

Before computing NKDE, the SpatialLines object need to be cut into **lixels** with a specified minimal distance using lixelize_lines()

```{r}
lixels <- lixelize_lines(network, 
                         700, 
                         mindist = 350)
```

length of lixel = 700m

minimum length of a lixel = 350

#### Generating line centre points

lines_center() function will be used to generate a **SpatialPointsDataFrame (i.e samples)**

```{r}
samples <- lines_center(lixels) 
```

```{r}
dim(samples)
```

```{r}
dim(childcare)
```

```{r}
dim(network)
```

#### Performing NKDE

The original code results in error due to inconsistent number of rows.

```{r}
densities <- nkde(network, 
                   events = childcare,
                   w = rep(1, nrow(childcare)),
                   samples = samples,
                  kernel_name = "quartic",
                  method = "simple",
                  bw = 300,
                  sparse = TRUE,
                  verbose = FALSE)

```

```{r}
densities
```

##### Visualising NKDE

```{r}
samples$density <- densities
lixels$density <- densities
```

Rescale the density value to no. of events per kilometre

```{r}
samples$density <- samples$density*1000
lixels$density <- lixels$density*1000
```

```{r}
tmap_mode('plot')
tm_shape(lixels)+
  tm_lines(col="density")+
tm_shape(childcare)+
  tm_dots()
tmap_mode('plot')
```

### Network Constrained G- and K- Function Analysis

Ho: The observed spatial point events (i.e. distribution of childcare centres) are uniformly distributed over a street network in Punggol Planning Area.

If null hypothesis is rejected, we may infer that the distribution of childcare centres are spatially interacting and dependent on each other, resulting in nonrandom patterns.

```{r}
kfun_childcare <- kfunctions(network, 
                             childcare,
                             start = 0, 
                             end = 1000, 
                             step = 50, 
                             width = 50, 
                             nsim = 50, 
                             resolution = 50,
                             verbose = FALSE, 
                             conf_int = 0.05)
```

```{r}
kfun_childcare$plotk
```
